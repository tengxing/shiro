<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.1.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
	default-lazy-init="false">

	<!--一般在此引入各中配置文件，实现spring统一管理 -->
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
	</bean>
	<!--引入数据源 -->
	<import resource="classpath:datasource.xml" />
	<!-- 持久层mybatis -->
	<import resource="classpath:mybatis.xml" />


	<!-- 对dataSource 数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启注解配置 -->  
    <context:annotation-config />
    
	<!-- 支持事务注解的（@Transactional） -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 定时器开关 处理异步时候使用 -->
	<task:annotation-driven />


	<!-- 启动AOP支持 -->
	<!-- <aop:aspectj-autoproxy /> -->

	<!-- 配置事务管理器 -->
	     <!-- <bean id="txManager" 56 class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		57 <property name="dataSource" ref="dataSource"></property> 58 </bean> -->
	
	    <!-- 定义个通知，指定事务管理器 -->
	    <!-- <tx:advice id="txAdvice" transaction-manager="txManager"> 62 <tx:attributes> 
		63 <tx:method name="delete*" propagation="REQUIRED" read-only="false" 64 
		rollback-for="java.lang.Exception" /> 65 <tx:method name="save*" propagation="REQUIRED" 
		read-only="false" 66 rollback-for="java.lang.Exception" /> 67 <tx:method 
		name="insert*" propagation="REQUIRED" read-only="false" 68 rollback-for="java.lang.Exception" 
		/> 69 <tx:method name="update*" propagation="REQUIRED" read-only="false" 
		70 rollback-for="java.lang.Exception" /> 71 <tx:method name="load*" propagation="SUPPORTS" 
		read-only="true"/> 72 <tx:method name="find*" propagation="SUPPORTS" read-only="true"/> 
		73 <tx:method name="search*" propagation="SUPPORTS" read-only="true"/> 74 
		<tx:method name="select*" propagation="SUPPORTS" read-only="true"/> 75 <tx:method 
		name="get*" propagation="SUPPORTS" read-only="true"/> 76 </tx:attributes> 
		77 </tx:advice> -->
	
	        <!-- 配置一个切入点 -->
	    <!-- <aop:config> 81 <aop:pointcut id="serviceMethods" expression="execution(* 
		com.cy.ssm.service.impl.*ServiceImpl.*(..))" /> 82 <aop:advisor advice-ref="txAdvice" 
		pointcut-ref="serviceMethods" /> 83 </aop:config> -->
</beans>